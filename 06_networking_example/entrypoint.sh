#!/bin/sh

# ===============================================
# ENTRYPOINT –î–õ–Ø –°–ï–¢–ï–í–û–ì–û –î–ï–ú–û –ö–û–ù–¢–ï–ô–ù–ï–†–ê
# ===============================================

set -e

echo "üåê –ó–∞–ø—É—Å–∫ —Å–µ—Ç–µ–≤–æ–≥–æ –¥–µ–º–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
echo "–ö–æ–º–∞–Ω–¥–∞: $1"
echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä: $(hostname)"
echo "IP –∞–¥—Ä–µ—Å–∞:"
ip addr show | grep "inet " | sed 's/^/   /'

case "$1" in
    "web-server")
        echo "üåç –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞..."
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é HTML —Å—Ç—Ä–∞–Ω–∏—Ü—É
        cat > /var/www/html/index.html << EOF
<!DOCTYPE html>
<html>
<head>
    <title>Docker Network Demo - $(hostname)</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
        .container { background: white; padding: 30px; border-radius: 10px; }
        .info { background: #e7f3ff; padding: 15px; border-radius: 5px; margin: 10px 0; }
        pre { background: #f0f0f0; padding: 10px; border-radius: 5px; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üê≥ Docker Network Demo</h1>
        <div class="info">
            <h3>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ:</h3>
            <p><strong>Hostname:</strong> $(hostname)</p>
            <p><strong>Server:</strong> ${SERVER_NAME:-Unknown}</p>
            <p><strong>Port:</strong> ${SERVER_PORT:-80}</p>
        </div>
        <div class="info">
            <h3>–°–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:</h3>
            <pre>$(ip addr show)</pre>
        </div>
        <div class="info">
            <h3>–ú–∞—Ä—à—Ä—É—Ç—ã:</h3>
            <pre>$(ip route)</pre>
        </div>
    </div>
</body>
</html>
EOF

        # –°–æ–∑–¥–∞–µ–º health endpoint
        cat > /var/www/html/health << EOF
{
    "status": "healthy",
    "container": "$(hostname)",
    "server": "${SERVER_NAME:-web-server}",
    "timestamp": "$(date -Iseconds)"
}
EOF

        echo "‚úÖ –í–µ–±-—Å–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –Ω–∞ –ø–æ—Ä—Ç—É ${SERVER_PORT:-80}"
        nginx -g "daemon off;"
        ;;
        
    "api-server")
        echo "üîß –ó–∞–ø—É—Å–∫ API —Å–µ—Ä–≤–µ—Ä–∞..."
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Python API —Å–µ—Ä–≤–µ—Ä
        cd /app
        python3 server.py
        ;;
        
    "nginx-lb")
        echo "‚öñÔ∏è  –ó–∞–ø—É—Å–∫ Load Balancer..."
        
        # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è load balancer
        cat > /etc/nginx/conf.d/default.conf << EOF
upstream backend {
    least_conn;
    server web1:80 max_fails=3 fail_timeout=30s;
    server web2:80 max_fails=3 fail_timeout=30s;
}

server {
    listen 80;
    server_name localhost;
    
    location / {
        proxy_pass http://backend;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
    }
    
    location /health {
        return 200 '{"status":"healthy","service":"load-balancer"}';
        add_header Content-Type application/json;
    }
}
EOF

        nginx -g "daemon off;"
        ;;
        
    "network-monitor")
        echo "üìä –ó–∞–ø—É—Å–∫ —Å–µ—Ç–µ–≤–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∞..."
        
        while true; do
            echo "========== $(date) =========="
            echo "üåê –ê–∫—Ç–∏–≤–Ω—ã–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:"
            netstat -tuln | head -20
            echo ""
            echo "üì° –°–µ—Ç–µ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
            cat /proc/net/dev | head -5
            echo ""
            echo "üîç DNS –∑–∞–ø—Ä–æ—Å—ã:"
            # –ú–æ–Ω–∏—Ç–æ—Ä–∏–º DNS —Ç—Ä–∞—Ñ–∏–∫ –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
            timeout 30 tcpdump -i any -n port 53 2>/dev/null | head -10 || echo "tcpdump –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
            echo ""
            sleep 60
        done
        ;;
        
    "isolated-mode")
        echo "üîí –ó–∞–ø—É—Å–∫ –≤ –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ (–±–µ–∑ —Å–µ—Ç–∏)..."
        echo "–≠—Ç–æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∏–º–µ–µ—Ç —Å–µ—Ç–µ–≤–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞"
        
        while true; do
            echo "$(date): –†–∞–±–æ—Ç–∞—é –≤ –∏–∑–æ–ª—è—Ü–∏–∏..."
            echo "–°–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
            ip addr show | grep -E "(lo:|inet )"
            sleep 30
        done
        ;;
        
    "host-mode")
        echo "üè† –ó–∞–ø—É—Å–∫ –≤ host —Ä–µ–∂–∏–º–µ..."
        echo "–≠—Ç–æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–µ—Ç—å —Ö–æ—Å—Ç–∞"
        
        echo "–°–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã —Ö–æ—Å—Ç–∞:"
        ip addr show
        echo ""
        echo "–û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã —Ö–æ—Å—Ç–∞:"
        netstat -tlnp | head -20
        
        # –ü—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –Ω–∞ —Ö–æ—Å—Ç–µ
        python3 -m http.server 8888 &
        
        tail -f /dev/null
        ;;
        
    "shared-mode")
        echo "ü§ù –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ –æ–±—â–µ–π —Å–µ—Ç–∏..."
        echo "–≠—Ç–æ—Ç –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–µ—Ç—å –¥—Ä—É–≥–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
        
        while true; do
            echo "$(date): –ò—Å–ø–æ–ª—å–∑—É—é —Å–µ—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ web1"
            echo "–ú–æ–∏ —Å–µ—Ç–µ–≤—ã–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã:"
            ip addr show
            echo ""
            sleep 30
        done
        ;;
        
    "multi-service")
        echo "üöÄ –ó–∞–ø—É—Å–∫ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º nginx
        nginx &
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Python —Å–µ—Ä–≤–µ—Ä
        cd /app
        python3 server.py &
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π TCP —Å–µ—Ä–≤–µ—Ä
        nc -l -p 3000 -k -e /app/scripts/test-connectivity.sh &
        
        echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã:"
        echo "   - Nginx: –ø–æ—Ä—Ç 80"
        echo "   - Python API: –ø–æ—Ä—Ç 8080"  
        echo "   - TCP —Å–µ—Ä–≤–µ—Ä: –ø–æ—Ä—Ç 3000"
        
        # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        wait
        ;;
        
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
        echo "  - web-server: –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ Nginx"
        echo "  - api-server: API —Å–µ—Ä–≤–µ—Ä –Ω–∞ Python"
        echo "  - nginx-lb: Load Balancer"
        echo "  - network-monitor: –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–∏"
        echo "  - isolated-mode: –∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º"
        echo "  - host-mode: —Ä–µ–∂–∏–º —Ö–æ—Å—Ç-—Å–µ—Ç–∏"
        echo "  - shared-mode: —Ä–µ–∂–∏–º –æ–±—â–µ–π —Å–µ—Ç–∏"
        echo "  - multi-service: –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã"
        exit 1
        ;;
esac
