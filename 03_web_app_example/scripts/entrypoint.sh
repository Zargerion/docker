#!/bin/bash

# ===============================================
# ENTRYPOINT –°–ö–†–ò–ü–¢ –î–õ–Ø FLASK –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
# ===============================================
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
# –∏ –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

echo "üê≥ –ó–∞–ø—É—Å–∫ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
wait_for_service() {
    local host=$1
    local port=$2
    local service_name=$3
    
    echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ $service_name ($host:$port)..."
    
    while ! nc -z "$host" "$port"; do
        echo "   $service_name –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ–∂–∏–¥–∞–Ω–∏–µ..."
        sleep 2
    done
    
    echo "‚úÖ $service_name –¥–æ—Å—Ç—É–ø–µ–Ω!"
}

# –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [ -n "$DATABASE_URL" ]; then
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ö–æ—Å—Ç –∏ –ø–æ—Ä—Ç –∏–∑ DATABASE_URL
    DB_HOST=$(echo $DATABASE_URL | sed -n 's/.*@\([^:]*\):.*/\1/p')
    DB_PORT=$(echo $DATABASE_URL | sed -n 's/.*:\([0-9]*\)\/.*/\1/p')
    
    if [ -n "$DB_HOST" ] && [ -n "$DB_PORT" ]; then
        wait_for_service "$DB_HOST" "$DB_PORT" "PostgreSQL"
    fi
fi

# –û–∂–∏–¥–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Redis
if [ -n "$REDIS_URL" ]; then
    REDIS_HOST=$(echo $REDIS_URL | sed -n 's/.*\/\/\([^:]*\):.*/\1/p')
    REDIS_PORT=$(echo $REDIS_URL | sed -n 's/.*:\([0-9]*\)\/.*/\1/p')
    
    if [ -n "$REDIS_HOST" ] && [ -n "$REDIS_PORT" ]; then
        wait_for_service "$REDIS_HOST" "$REDIS_PORT" "Redis"
    fi
fi

# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üîÑ –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
if [ "$FLASK_ENV" = "development" ]; then
    # –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –ë–î –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    python -c "
from app import create_app, db
app = create_app()
with app.app_context():
    try:
        db.create_all()
        print('‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã')
    except Exception as e:
        print(f'‚ö†Ô∏è  –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü: {e}')
"
else
    # –í –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    flask db upgrade || echo "‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è –ª–æ–≥–æ–≤ –∏ –∑–∞–≥—Ä—É–∑–æ–∫
mkdir -p /app/logs /app/uploads /app/data
echo "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
chmod 755 /app/logs /app/uploads /app/data

# –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏
echo "üîß –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–∫—Ä—É–∂–µ–Ω–∏–∏:"
echo "   FLASK_ENV: ${FLASK_ENV:-production}"
echo "   APP_HOME: ${APP_HOME:-/app}"
echo "   DATABASE_URL: ${DATABASE_URL:0:30}..." # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞–ª–æ URL
echo "   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
echo "   –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

# –ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã, –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $@"
exec "$@"
