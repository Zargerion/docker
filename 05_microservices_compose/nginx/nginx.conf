# ===============================================
# NGINX КОНФИГУРАЦИЯ ДЛЯ API GATEWAY
# ===============================================

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Логирование
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Основные настройки
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 10M;
    
    # Upstream серверы (микросервисы)
    upstream user_service {
        least_conn;
        server user-service:3001 max_fails=3 fail_timeout=30s;
        # Для масштабирования можно добавить больше инстансов:
        # server user-service-2:3001 max_fails=3 fail_timeout=30s;
        # server user-service-3:3001 max_fails=3 fail_timeout=30s;
    }
    
    upstream product_service {
        least_conn;
        server product-service:3002 max_fails=3 fail_timeout=30s;
    }
    
    upstream order_service {
        least_conn;
        server order-service:3003 max_fails=3 fail_timeout=30s;
    }
    
    upstream notification_service {
        least_conn;
        server notification-service:3004 max_fails=3 fail_timeout=30s;
    }
    
    # Кэширование
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;
    
    # Основной сервер
    server {
        listen 80;
        server_name localhost;
        
        # Общие настройки прокси
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Health check для API Gateway
        location /health {
            access_log off;
            return 200 "API Gateway is healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Маршрутизация к микросервисам
        
        # Сервис пользователей
        location /api/users {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://user_service;
            
            # Кэширование GET запросов
            proxy_cache api_cache;
            proxy_cache_valid 200 5m;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # Аутентификация (особые ограничения)
        location /api/auth {
            limit_req zone=auth_limit burst=10 nodelay;
            proxy_pass http://user_service;
            proxy_cache off;
        }
        
        # Сервис продуктов
        location /api/products {
            limit_req zone=api_limit burst=20 nodelay;
            proxy_pass http://product_service;
            
            # Кэширование для каталога продуктов
            proxy_cache api_cache;
            proxy_cache_valid 200 10m;
            proxy_cache_key "$scheme$request_method$host$request_uri$args";
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        # Сервис заказов
        location /api/orders {
            limit_req zone=api_limit burst=15 nodelay;
            proxy_pass http://order_service;
            proxy_cache off;  # Не кэшируем заказы
        }
        
        # Сервис уведомлений
        location /api/notifications {
            limit_req zone=api_limit burst=10 nodelay;
            proxy_pass http://notification_service;
            proxy_cache off;
        }
        
        # WebSocket поддержка для уведомлений
        location /ws {
            proxy_pass http://notification_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_cache off;
        }
        
        # Статические файлы (если есть frontend)
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Метрики для Prometheus
        location /metrics {
            access_log off;
            allow 172.0.0.0/8;  # Только внутренние сети
            deny all;
            proxy_pass http://user_service/metrics;
        }
        
        # Обработка ошибок
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        # Блокировка доступа к скрытым файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # HTTPS сервер (если есть SSL сертификаты)
    # server {
    #     listen 443 ssl http2;
    #     server_name localhost;
    #     
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    #     
    #     # Остальная конфигурация аналогична HTTP серверу
    # }
}
